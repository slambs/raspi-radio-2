{"ast":null,"code":"var _jsxFileName = \"/Users/vasse/Documents/code/js/raspiRadio2/raspi-radio-2/src/Temp.jsx\";\n\n/** @format */\nimport React, { PureComponent } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CELCIUS_CONST = /*#__PURE__*/_jsxDEV(\"span\", {\n  children: \"\\u2103\"\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 23\n}, this);\n\nexport class TempInside extends PureComponent {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tempStyle\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [' ', \"Inside (Sensor) : \", this.getInsideTemp(), \" \", CELCIUS_CONST]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\" Outside (Location) : 24 \", CELCIUS_CONST, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n  getInsideTemp() {\n    const sensor = require('node-dht-sensor');\n\n    sensor.read(22, 4, function (err, temperature, humidity) {\n      if (!err) {\n        return `temp: ${temperature.toFixed(2)}°C, humidity: ${humidity.toFixed(2)}%`;\n      } else {\n        return '-99';\n      }\n    });\n  }\n\n}\nexport default TempInside;","map":{"version":3,"sources":["/Users/vasse/Documents/code/js/raspiRadio2/raspi-radio-2/src/Temp.jsx"],"names":["React","PureComponent","CELCIUS_CONST","TempInside","render","getInsideTemp","sensor","require","read","err","temperature","humidity","toFixed"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;;;AAIA,MAAMC,aAAa,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtB;;AAEA,OAAO,MAAMC,UAAN,SAAyBF,aAAzB,CAAuC;AAC5CG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAA,mBACG,GADH,wBAEqB,KAAKC,aAAL,EAFrB,OAE4CH,aAF5C;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA,gDAA8BA,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AACDG,EAAAA,aAAa,GAAG;AAElB,UAAMC,MAAM,GAAGC,OAAO,CAAC,iBAAD,CAAtB;;AACID,IAAAA,MAAM,CAACE,IAAP,CAAY,EAAZ,EAAgB,CAAhB,EAAmB,UAAUC,GAAV,EAAeC,WAAf,EAA4BC,QAA5B,EAAsC;AACvD,UAAI,CAACF,GAAL,EAAU;AACR,eAAS,SAAQC,WAAW,CAACE,OAAZ,CAAoB,CAApB,CAAuB,iBAAgBD,QAAQ,CAACC,OAAT,CAAiB,CAAjB,CAAoB,GAA5E;AACD,OAFD,MAEO;AACL,eAAO,KAAP;AACD;AACF,KAND;AASD;;AAxB2C;AA2B9C,eAAeT,UAAf","sourcesContent":["/** @format */\n\nimport React, { PureComponent } from 'react'\n\n\n\nconst CELCIUS_CONST = <span>&#8451;</span>\n\nexport class TempInside extends PureComponent {\n  render() {\n    return (\n      <div className='tempStyle'>\n        <h5>\n          {' '}\n          Inside (Sensor) : {this.getInsideTemp()} {CELCIUS_CONST}\n        </h5>\n        <h5> Outside (Location) : 24 {CELCIUS_CONST} </h5>\n      </div>\n    )\n  }\n  getInsideTemp() {\n\nconst sensor = require('node-dht-sensor')\n    sensor.read(22, 4, function (err, temperature, humidity) {\n      if (!err) {\n        return  `temp: ${temperature.toFixed(2)}°C, humidity: ${humidity.toFixed(2)}%`\n      } else {\n        return '-99'\n      }\n    })\n\n    \n  }\n}\n\nexport default TempInside\n"]},"metadata":{},"sourceType":"module"}